{
  "timestamp": "2025-09-16T03:34:47.712Z",
  "environment": "development",
  "overallPassed": false,
  "totalDuration": 25857,
  "suiteResults": [
    {
      "name": "Unit Tests",
      "passed": false,
      "duration": 25856,
      "details": "Command failed: npm test -- tests/services tests/models tests/api --run\n\u001b[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.\u001b[39m\nstderr | tests/services/ContextAnalyzer.test.ts > ContextAnalyzer > analyzeConversationFlow > should handle Gemini API errors gracefully\nError classifying topic: Error: API Error\n    at /Users/sathwikreddy/Desktop/brainStorm/tests/services/ContextAnalyzer.test.ts:133:65\n    at file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n\nstderr | tests/services/ContextAnalyzer.test.ts > ContextAnalyzer > identifyInformationGaps > should handle API errors when identifying gaps\nError identifying information gaps: Error: API Error\n    at /Users/sathwikreddy/Desktop/brainStorm/tests/services/ContextAnalyzer.test.ts:271:65\n    at file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:135:14\n    at file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:60:26\n    at runTest (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:781:17)\n    at runSuite (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runSuite (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:909:15)\n    at runFiles (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:958:5)\n    at startTests (file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/@vitest/runner/dist/index.js:967:3)\n    at file:///Users/sathwikreddy/Desktop/brainStorm/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 15 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  tests/services/ErrorHandler.test.ts > ErrorHandler > error classification > should classify network errors correctly\nAssertionError: expected 3 to be 4 // Object.is equality\n\n- Expected\n+ Received\n\n- 4\n+ 3\n\n ❯ tests/services/ErrorHandler.test.ts:204:59\n    202| \n    203|       const stats = errorHandler.getErrorStatistics();\n    204|       expect(stats.errorsByType[ErrorType.NETWORK_ERROR]).toBe(4); // …\n       |                                                           ^\n    205|     });\n    206| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/15]⎯\n\n FAIL  tests/services/ErrorHandler.test.ts > ErrorHandler > error classification > should classify API failures correctly\nAssertionError: expected 3 to be 4 // Object.is equality\n\n- Expected\n+ Received\n\n- 4\n+ 3\n\n ❯ tests/services/ErrorHandler.test.ts:220:57\n    218| \n    219|       const stats = errorHandler.getErrorStatistics();\n    220|       expect(stats.errorsByType[ErrorType.API_FAILURE]).toBe(4); // 1 …\n       |                                                         ^\n    221|     });\n    222| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/15]⎯\n\n FAIL  tests/services/ErrorHandler.test.ts > ErrorHandler > error classification > should classify rate limit errors correctly\nAssertionError: expected 3 to be 4 // Object.is equality\n\n- Expected\n+ Received\n\n- 4\n+ 3\n\n ❯ tests/services/ErrorHandler.test.ts:236:56\n    234| \n    235|       const stats = errorHandler.getErrorStatistics();\n    236|       expect(stats.errorsByType[ErrorType.RATE_LIMIT]).toBe(4); // 1 +…\n       |                                                        ^\n    237|     });\n    238| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/15]⎯\n\n FAIL  tests/services/ErrorHandler.test.ts > ErrorHandler > error statistics > should track error statistics correctly\nTypeError: actual value must be number or bigint, received \"undefined\"\n ❯ tests/services/ErrorHandler.test.ts:273:58\n    271|       expect(stats.totalErrors).toBeGreaterThan(0);\n    272|       expect(stats.errorsByType[ErrorType.NETWORK_ERROR]).toBeGreaterT…\n    273|       expect(stats.errorsBySeverity[ErrorSeverity.HIGH]).toBeGreaterTh…\n       |                                                          ^\n    274|     });\n    275| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/15]⎯\n\n FAIL  tests/services/ErrorHandler.test.ts > ErrorHandler > error statistics > should calculate error rate correctly\nAssertionError: expected 1 to be less than 1\n ❯ tests/services/ErrorHandler.test.ts:306:31\n    304| \n    305|       const stats = freshErrorHandler.getErrorStatistics();\n    306|       expect(stats.errorRate).toBeLessThan(1.0);\n       |                               ^\n    307|       expect(stats.resolvedErrors).toBe(0); // The failed operation wa…\n    308|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > generateResponse > should generate topic redirect response\nAssertionError: expected 'There seems to be some ambiguity here…' to be 'I notice we\\'ve moved away from discu…' // Object.is equality\n\n- Expected\n+ Received\n\n- I notice we've moved away from discussing the Series A investment. Should we return to evaluating TechCorp's market position?\n+ There seems to be some ambiguity here. Could you provide clarification on acknowledge limitation and defer?\n\n ❯ tests/services/ResponseGenerator.test.ts:75:32\n     73| \n     74|       expect(response.type).toBe(InterventionType.TOPIC_REDIRECT);\n     75|       expect(response.content).toBe(mockGeminiResponse.content);\n       |                                ^\n     76|       expect(response.confidence).toBe(0.85);\n     77|       expect(response.followUpSuggestions).toBeDefined();\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > generateResponse > should generate information provide response\nAssertionError: expected 'I want to be careful here since there…' to contain 'TechCorp'\n\n- Expected\n+ Received\n\n- TechCorp\n+ I want to be careful here since there's some uncertainty. Detected ambiguous_context: Insufficient conversation context for accurate analysis I can provide general guidance, but I'd recommend verifying specific details before making important decisions.\n\n ❯ tests/services/ResponseGenerator.test.ts:104:32\n    102| \n    103|       expect(response.type).toBe(InterventionType.INFORMATION_PROVIDE);\n    104|       expect(response.content).toContain('TechCorp');\n       |                                ^\n    105|       expect(response.confidence).toBe(0.9);\n    106|       expect(response.sources).toBeDefined();\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > generateResponse > should generate fact check response\nAssertionError: expected 'I need some clarification to provide …' to contain 'verify'\n\n- Expected\n+ Received\n\n- verify\n+ I need some clarification to provide accurate information. Could you help me understand acknowledge limitation and defer?\n\n ❯ tests/services/ResponseGenerator.test.ts:130:32\n    128| \n    129|       expect(response.type).toBe(InterventionType.FACT_CHECK);\n    130|       expect(response.content).toContain('verify');\n       |                                ^\n    131|       expect(response.confidence).toBe(0.8);\n    132|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > generateResponse > should generate clarification request response\nAssertionError: expected 'To give you the best response, I\\'d l…' to contain 'clarify'\n\n- Expected\n+ Received\n\n- clarify\n+ To give you the best response, I'd like clarification on acknowledge limitation and defer. Could you provide more details?\n\n ❯ tests/services/ResponseGenerator.test.ts:166:32\n    164| \n    165|       expect(response.type).toBe(InterventionType.CLARIFICATION_REQUES…\n    166|       expect(response.content).toContain('clarify');\n       |                                ^\n    167|       expect(response.confidence).toBe(0.75);\n    168|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > generateResponse > should generate summary offer response\nAssertionError: expected 'To give you the best response, I\\'d l…' to contain 'summarized'\n\n- Expected\n+ Received\n\n- summarized\n+ To give you the best response, I'd like clarification on acknowledge limitation and defer. Could you provide more details?\n\n ❯ tests/services/ResponseGenerator.test.ts:186:32\n    184| \n    185|       expect(response.type).toBe(InterventionType.SUMMARY_OFFER);\n    186|       expect(response.content).toContain('summarized');\n       |                                ^\n    187|       expect(response.confidence).toBe(0.8);\n    188|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > response appropriateness > should generate contextually appropriate responses for different meeting types\nAssertionError: expected 'I need some clarification to provide …' to contain 'due diligence'\n\n- Expected\n+ Received\n\n- due diligence\n+ I need some clarification to provide accurate information. Could you help me understand acknowledge limitation and defer?\n\n ❯ tests/services/ResponseGenerator.test.ts:339:32\n    337|       );\n    338| \n    339|       expect(response.content).toContain('due diligence');\n       |                                ^\n    340|       expect(response.content).toContain('financial metrics');\n    341|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > error handling > should handle missing intervention type gracefully\nAssertionError: expected 'I need some clarification to provide …' to contain 'having trouble generating a response'\n\n- Expected\n+ Received\n\n- having trouble generating a response\n+ I need some clarification to provide accurate information. Could you help me understand acknowledge limitation and defer?\n\n ❯ tests/services/ResponseGenerator.test.ts:431:32\n    429|       \n    430|       expect(response).toBeDefined();\n    431|       expect(response.content).toContain('having trouble generating a …\n       |                                ^\n    432|       expect(response.confidence).toBeLessThan(0.5);\n    433|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > error handling > should provide meaningful fallback when Gemini API is unavailable\nAssertionError: expected 'Graceful degradation response' to contain 'Fallback'\n\n- Expected\n+ Received\n\n- Fallback\n+ Graceful degradation response\n\n ❯ tests/services/ResponseGenerator.test.ts:449:48\n    447|       expect(response.confidence).toBeLessThan(0.9);\n    448|       expect(response.sources).toBeDefined();\n    449|       expect(response.sources![0].description).toContain('Fallback');\n       |                                                ^\n    450|     });\n    451|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > follow-up suggestions > should provide relevant follow-up suggestions for each intervention type\nAssertionError: expected 'I can help once we clarify the details' to contain 'dive deeper'\n\n- Expected\n+ Received\n\n- dive deeper\n+ I can help once we clarify the details\n\n ❯ tests/services/ResponseGenerator.test.ts:470:48\n    468|       expect(response.followUpSuggestions).toBeDefined();\n    469|       expect(response.followUpSuggestions!.length).toBeGreaterThan(0);\n    470|       expect(response.followUpSuggestions![0]).toContain('dive deeper'…\n       |                                                ^\n    471|     });\n    472| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/15]⎯\n\n FAIL  tests/services/ResponseGenerator.test.ts > DefaultResponseGenerator > follow-up suggestions > should provide different follow-up suggestions for different intervention types\nAssertionError: expected [ …(2) ] to not deeply equal [ …(2) ]\n\nCompared values have no visual difference.\n\n ❯ tests/services/ResponseGenerator.test.ts:492:61\n    490|       );\n    491| \n    492|       expect(topicRedirectResponse.followUpSuggestions).not.toEqual(\n       |                                                             ^\n    493|         factCheckResponse.followUpSuggestions\n    494|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/15]⎯\n\n"
    }
  ],
  "summary": {
    "totalTests": 1,
    "passedTests": 0,
    "failedTests": 1,
    "skippedTests": 0
  }
}